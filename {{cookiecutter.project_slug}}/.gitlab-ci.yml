{% if cookiecutter.use_submodules == "Yes" -%}
variables:
  GIT_SUBMODULE_STRATEGY: recursive
{%- endif %}

.template: &template
  script:
{% if cookiecutter.python_bindings == "Yes" and cookiecutter.use_submodules == "No" %}
    - git clone -b v2.6.1 https://github.com/pybind/pybind11.git
    - cd pybind11
    - mkdir build
    - cd build
    - cmake -DBUILD_TESTING=OFF ..
    - sudo make install
    - cd ..
{%- endif %}
{% if cookiecutter.use_submodules == "No" %}
    - git clone -b v2.13.3 https://github.com/catchorg/Catch2.git
    - cd Catch2
    - mkdir build
    - cd build
    - cmake -DBUILD_TESTING=OFF ..
    - sudo make install
    - cd ..
{%- endif %}
    - cmake -E make_directory build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Debug ..
    - cmake --build .
    - ctest

build-and-test:gcc:
  image: conanio/gcc9
  <<: *template

build-and-test:clang:
  image: conanio/clang10
  <<: *template

{% if cookiecutter.codecovio == "Yes" %}
generate-coverage-report:
  image: conanio/gcc9
  before_script:
    - sudo apt-get install -yy lcov
  script:
    - cmake -E make_directory build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="--coverage" ..
    - cmake --build .
    - ctest
    - cd ..
    - lcov --directory ./build/src --capture --output-file coverage.info
    - lcov --remove coverage.info '/usr/*' '*/ext/*' '*/{{ cookiecutter.project_slug }}/tests/*' --output-file coverage.info
    - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
{% endif %}